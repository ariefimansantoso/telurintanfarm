@page "/app/recordingreportsall"
@using System.Security.Claims;
@using Microsoft.EntityFrameworkCore;
@using QuickAccounting.Data.Recording;
@using System.Transactions;
@using System.Globalization;
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@inject IUser _user
@inject IEmployee _employee
@inject IWebHostEnvironment _hostingEnvironment
@inject IPrivilege _privilege
@inject NavigationManager navigation
@inject IDailyRecordingService _recording
@inject IKandangService _kandang
@inject IDailyEggPickupService _egg
@attribute [Authorize]

<PageTitle>Laporan Recording</PageTitle>
<Loader IsLoading="isProcessing"></Loader>

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Laporan Recording</h4>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="form-group" style="text-align: center !important;">
                        <label>Pilih Nomor Kandang</label>
                        <div class="row">
                            <div class="col-lg col-sm-12 col-12">
                                <select class="form-control" @onchange="OnCageChanged">
                                    <option value="SEMUA">SEMUA KANDANG</option>
                                    @foreach (var kandangItem in CageList)
                                    {
                                        <option value="@kandangItem.NoKandang">@kandangItem.NoKandang</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12 col-sm-12 col-12">
                    @foreach (var column in AvailableColumnNames)
                    {
                        <div>
                            <input type="checkbox" @bind="@SelectedColumns[column.Value]" id="@column.Value" />
                            <label for="@column.Key">@column.Key</label>
                        </div>
                    }
                </div>
            </div>
                   
            <div class="row">
			<div class="col-lg col-sm-6 col-12">
				<div class="form-group">
					Dari Tanggal
					<input type="date" @bind="@dtFromDate" class="form-control" />
				</div>
			</div>
			<div class="col-lg col-sm-6 col-12">
				<div class="form-group">
					Ke Tanggal
					<input type="date" @bind="@dtToDate" class="form-control" />
				</div>
			</div>				
			<div class="col-lg-1 col-sm-6 col-12">
				<div class="form-group" style="margin-top:20px;">
                        <a class="btn btn-filters ms-auto" @onclick="()=>LoadRecording()"><img src="assets/img/icons/search-whites.svg" alt="img" /></a>
				</div>
			</div>
		</div>
        </div>
    </div>

    @if(ChartDataLoaded) 
			{
                <MudChart ChartType="ChartType.Line" ChartOptions="@Options" Style="width: 100%;" ChartSeries="@Series" @bind-SelectedIndex="SeriesIndex" XAxisLabels="@XAxisLabels" Width="100%" Height="350px" />
            }

    <div class="card">
        <div class="card-body">
            
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            @if (DailyRecordings != null && DailyRecordings.Count > 0)
            {
                <div class="table-responsive">
                    <h3>
                        Kandang: @DailyRecordings[0].CageNumber<br />
                        Strain: @DailyRecordings[0].StrainName
                    </h3>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th colspan="2" style="text-align:center;">UMUR</th>
                                <th colspan="7" style="text-align:center;">POPULASI</th>
                                <th colspan="3" style="text-align:center;">PAKAN</th>

                                <th colspan="2" style="text-align:center;">PROD UTUH</th>
                                <th colspan="2" style="text-align:center;">PROD BENTES</th>
                                <th colspan="2" style="text-align:center;">PROD TOTAL</th>

                                <th colspan="2" style="text-align:center;">%HD</th>
                                <th colspan="2" style="text-align:center;">EM(Kg)</th>
                                <th colspan="2" style="text-align:center;">EW(Gr)</th>

                                <th></th>

                            </tr>
                            <tr>
                                @* <th>KDG</th> *@
                                <th>TGL</th>
                                @* <th>Strain</th> *@
                                <th>MGG</th>
                                <th>HARI</th>   

                                <th>Awal</th>
                                <th>Mati</th>
                                <th>Afkir/Jual</th>                                                                                                                            
                                <th>Sakit</th>
                                <th>P+</th>
                                <th>P-</th>
                                <th>Akhir</th>
                                
                                <th>Konsentrat</th>
                                @* <th>KRM</th>
                                <th>SLD</th>
                                <th>PAKAI</th>
                                <th>SISA</th> *@
                                <th>FI</th>                                
                                <th>DEV</th>

                                <th>Butir</th>
                                <th>Kg</th>
                                <th>Butir</th>
                                <th>Kg</th>
                                <th>Butir</th>
                                <th>Kg</th>

                                <th>HD</th>
                                @* <th>STD</th> *@
                                <th>DEV</th>
                                <th>EM</th>
                               @*  <th>STD</th> *@
                                <th>DEV</th>
                                <th>EW</th>
                                @* <th>STD</th> *@
                                <th>DEV</th>

                                <th>FCR</th>
                                @* <th>Modified By</th>
                                <th>Modified Date</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var record in DailyRecordings)
                            {
                                <tr>
                                    @* <td>@record.CageNumber</td> *@
                                    <td>@record.RecordDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                                    @* <td>@record.StrainName</td> *@
                                    <td>@record.HenAgeWeeks</td>
                                    <td>@record.HenAgeDays</td>  

                                    <td>@record.PopulationStart</td>                                                                      
                                    <td>@record.DeadHenCount</td>
                                    <td>@record.UnproductiveHenCount</td>
                                    <td>@record.SickHenCount</td>
                                    <td>@record.MoveInHenCount</td>
                                    <td>@record.MoveOutHenCount</td>
                                    <td>@record.PopulationEnd</td>

                                    <td>@record.ConcentrateType</td>
                                    @* <td>@record.ActualFoodNeededKG</td>
                                    <td>@record.SaldoFoodKG</td>
                                    <td>@record.FoodNeededTodayKg</td>
                                    <td>@record.RemainingFoodKg</td> *@
                                    <td>@record.FoodIntakePerHen</td>                                    
                                    <td>@record.FoodIntakeDeviation</td>

                                    <td>@record.PerfectEggCount</td>
                                    <td>@record.PerfectEggKg</td>
                                    <td>@record.BrokenEggCount</td>
                                    <td>@record.BrokenEggKg</td>
                                    <td>@record.TotalEggCount</td>
                                    <td>@record.TotalEggKg</td>

                                    <td>@record.ActualHenDay</td>
                                    @* <td>@record.StandardHenDay</td> *@
                                    @if(record.DailyHenDayDifference < 0)
                                    {
                                        <td style="color:#ff0000 !important;">@record.DailyHenDayDifference</td>
                                    }
                                    else
                                    {
                                        <td>@record.DailyHenDayDifference</td>
                                    }
                                    
                                    <td>@record.ActualEggMassKg</td>
                                    @* <td>@record.StandardEggMassKg</td> *@
                                    <td>@record.EggMassDeviation</td>
                                    <td>@record.ActualEggWeightG</td>
                                    @* <td>@record.StandardEggWeightG</td> *@
                                    <td>@record.EggWeightDeviation</td>
                                    <td>@record.FeedConversionRatio</td>
                                    @* <td>@record.ModifiedBy</td>
                                    <td>@record.ModifiedDate.ToString("dd/MM/yyyy HH:mm", CultureInfo.InvariantCulture)</td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>                
            }
            else
            {
                <p>No data available.</p>
            }
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    string strMenu = "Laporan Recording";

    string SelectedNoKandang = "";
    private UserMaster modelUser;
    private Employee modelEmployee;
    private List<Kandang> CageList = new List<Kandang>();
    private List<DailyRecording> DailyRecordings = new List<DailyRecording>();
    private List<DailyRecording> PagedData = new List<DailyRecording>();
    private int CurrentPage = 1;
    private int PageSize = 10;
    private int TotalItems => DailyRecordings.Count; 
    DateTime dtFromDate;
    DateTime dtToDate;
    private string[] XAxisLabels; // Stores RecordDate as strings for X-axis labels
    private List<decimal> yAxisValues = new(); // Stores ActualHenDay values for Y-axis data
    public ChartOptions Options = new ChartOptions();
    public List<ChartSeries> Series = new List<ChartSeries>();
    private int SeriesIndex = -1;
    bool ChartDataLoaded = false;

    bool isProcessing;

    private Dictionary<string, bool> SelectedColumns = new();

    private List<string> ColumnNames = new List<string>
    {
        "CageNumber",
        "RecordDate",
        "StrainName",
        "HenAgeWeeks",
        "HenAgeDays",
        "PopulationStart",
        "PopulationEnd",
        "DeadHenCount",
        "UnproductiveHenCount",
        "SickHenCount",
        "MoveInHenCount",
        "MoveOutHenCount",
        "ConcentrateType",
        "FoodIntakePerHen",
        "RemainingFoodKg",
        "FoodNeededTodayKg",
        "ActualFoodNeededKG",
        "SaldoFoodKG",
        "FoodIntakeDeviation",
        "PerfectEggCount",
        "PerfectEggKg",
        "BrokenEggCount",
        "BrokenEggKg",
        "TotalEggCount",
        "TotalEggKg",
        "ActualHenDay",
        "StandardHenDay",
        "DailyHenDayDifference",
        "ActualEggMassKg",
        "StandardEggMassKg",
        "EggMassDeviation",
        "ActualEggWeightG",
        "StandardEggWeightG",
        "EggWeightDeviation",
        "FeedConversionRatio"
    };

    private Dictionary<string, string> AvailableColumnNames = new Dictionary<string, string>
    {
        { "KDG", "CageNumber" },
        { "TGL", "RecordDate" },
        { "Strain", "StrainName" },
        { "MGG", "HenAgeWeeks" },
        { "HARI", "HenAgeDays" },
        { "Awal", "PopulationStart" },
        { "Akhir", "PopulationEnd" },
        { "Mati", "DeadHenCount" },
        { "Afkir", "UnproductiveHenCount" },
        { "Sakit", "SickHenCount" },
        { "P+", "MoveInHenCount" },
        { "P-", "MoveOutHenCount" },
        { "Pakan", "ConcentrateType" },
        { "FI", "FoodIntakePerHen" },
        { "Sisa", "RemainingFoodKg" },
        { "Pakai", "FoodNeededTodayKg" },
        { "Kirim", "ActualFoodNeededKG" },
        { "Saldo", "SaldoFoodKG" },
        { "FI +/-", "FoodIntakeDeviation" },
        { "Utuh", "PerfectEggCount" },
        { "Utuh KG", "PerfectEggKg" },
        { "Bentes", "BrokenEggCount" },
        { "Bentes KG", "BrokenEggKg" },
        { "Total", "TotalEggCount" },
        { "Total KG", "TotalEggKg" },
        { "HD", "ActualHenDay" },
        //{ "STD", "StandardHenDay" },
        { "HD +/-", "DailyHenDayDifference" },
        { "EM", "ActualEggMassKg" },
        //{ "STD EM", "StandardEggMassKg" },
        { "EM +/-", "EggMassDeviation" },
        { "EW", "ActualEggWeightG" },
        //{ "", "StandardEggWeightG" },
        { "EW +/-", "EggWeightDeviation" },
        { "FCR", "FeedConversionRatio" }
    };

    private async Task LoadRecording()
    {
        DailyRecordings = await _recording.GetRecordingsByKandang(SelectedNoKandang, dtFromDate, dtToDate);
        DailyRecordings = DailyRecordings.OrderBy(x => x.RecordDate).ToList();
        await GetGraphData();

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        var now = DateTime.Now;
        dtFromDate = new DateTime(now.Year, now.Month, 1);
        int lastDay = DateTime.DaysInMonth(now.Year, now.Month);
        dtToDate = new DateTime(now.Year, now.Month, lastDay);

        // Simulate fetching data from a service
        CageList = await _kandang.GetAll();

        UpdatePagedData();
    }

    private async Task GetGraphData()
    {               
        Series = new List<ChartSeries>();
        ChartSeries series = new ChartSeries();
        series.Name = "+/- HD";
        series.Data = DailyRecordings.Select(record => Convert.ToDouble(record.ActualHenDay)).ToArray();
        Series.Add(series);

        series = new ChartSeries();
        series.Name = "EW(gr)";
        series.Data = DailyRecordings.Select(record => Convert.ToDouble(record.ActualEggWeightG)).ToArray();
        Series.Add(series);

        // Map strainData to chart data
        XAxisLabels = DailyRecordings
            // Select every 4th record
            .Select(record => record.HenAgeWeeks.ToString())
            .ToArray();
        yAxisValues = DailyRecordings.Select(record => record.ActualHenDay).ToList();

        Options.YAxisTicks = 20;       

        if(DailyRecordings.Count > 0)
        {
            ChartDataLoaded = true;
        }
    }

    private async Task OnCageChanged(ChangeEventArgs e)
    {        
        if (e.Value.ToString() != "TIDAK")
        {
            SelectedNoKandang = e.Value.ToString();
            StateHasChanged();
        }
    }

    private void HandlePageChange(int pageNumber)
    {
        CurrentPage = pageNumber;
        UpdatePagedData();
    }

    private void UpdatePagedData()
    {
        PagedData = DailyRecordings
            .Skip((CurrentPage - 1) * PageSize)
            .Take(PageSize)
            .ToList();
    }
}
