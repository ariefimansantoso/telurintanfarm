@page "/app/recordingreportscage"
@using System.Security.Claims;
@using Microsoft.EntityFrameworkCore;
@using QuickAccounting.Data.Recording;
@using System.Transactions;
@using System.Globalization;
@using QuickAccounting.Components
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@inject IUser _user
@inject IEmployee _employee
@inject IWebHostEnvironment _hostingEnvironment
@inject IPrivilege _privilege
@inject NavigationManager navigation
@inject IDailyRecordingService _recording
@inject IKandangService _kandang
@inject IDailyEggPickupService _egg
@inject AuthenticationStateProvider authStateProvider
@inject ApplicationDbContext _db
@attribute [Authorize]

<PageTitle>Laporan Recording</PageTitle>
<Loader IsLoading="isProcessing"></Loader>

<style type="text/css">
    .table tbody tr td {
        padding-top: 2px !important;
        padding-bottom: 2px !important;
        /* color: #637381;
                    font-weight: 200 !important;
                    border-bottom: 1px solid #E9ECEF;
                    vertical-align: middle;
                    white-space: nowrap;
                    text-align: right !important; */
    }

    .table thead th {
        color: #637381;
        padding: 0px !important;
        white-space: nowrap;
        border: 1px solid #979797 !important;
    }
</style>

<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Laporan Recording</h4>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="form-group" style="text-align: center !important;">
                        <label>Pilih Nomor Kandang</label>
                        <div class="row">
                            <div class="col-lg col-sm-12 col-12">
                                <select class="form-control" @onchange="OnCageChanged">
                                    <option value="TIDAK">PILIH NO KANDANG</option>
                                    @foreach (var kandangItem in CageList)
                                    {
                                        <option value="@kandangItem.NoKandang">@kandangItem.NoKandang</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="form-group">
                        Dari Tanggal
                        <input type="date" @bind="@dtFromDate" class="form-control" />
                    </div>
                </div>
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="form-group">
                        Ke Tanggal
                        <input type="date" @bind="@dtToDate" class="form-control" />
                    </div>
                </div>				
                <div class="col-lg-12 col-sm-12 col-12">
                    <div class="form-group" style="margin-top:20px;">
                        <a class="btn btn-filters ms-auto" @onclick="()=>LoadRecording()"><img src="assets/img/icons/search-whites.svg" alt="img" /></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            @if (DailyEggPickups != null && DailyEggPickups.Count > 0)
            {
                <div class="table-responsive table-scrollable">
                    <h3>
                        Kandang: @DailyEggPickups[0].CageNumber<br />
                        Strain: @DailyEggPickups[0].StrainName
                    </h3>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>

                                <th colspan="2" style="text-align:center;">UTUH</th>
                                <th colspan="2" style="text-align:center;">PUTIH</th>
                                <th colspan="2" style="text-align:center;">BENTES</th>
                                <th colspan="2" style="text-align:center;">TOTAL</th>
                                <th></th>
                                <th></th>
                            </tr>
                            <tr>
                                <th>TGL</th> 

                                <th>B</th>
                                <th>Kg</th>
                                <th>B</th>
                                <th>Kg</th>
                                <th>B</th>
                                <th>Kg</th>
                                <th>B</th>
                                <th>Kg</th>
                                <th>A</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var totalButir = 0;
                                decimal totalKG = 0;
                            }
                            @foreach (var record in DailyEggPickups.ToList())
                            {
                                <tr>
                                    <td>@record.RecordDate.ToString("dd-MM", CultureInfo.InvariantCulture)</td>                                    
                                    <td>@record.TelurUtuhButir</td>
                                    <td>@record.TelurUtuhKG</td>
                                    <td>@record.TelurPutihButir</td>
                                    <td>@record.TelurPutihKG</td>
                                    <td>@record.TelurBentesButir</td>
                                    <td>@record.TelurBentesKG</td>
                                    <td>@record.TotalButir</td>
                                    <td>@record.TotalNettKG</td>
                                    <td>@(record.ReceivedBy > 0 ? "S" : "B")</td>
                                    <td>
                                        <a @onclick="( () => { OpenDeleteDialog(record.ID); } )" class="btn btn-danger" style="color:#fff !important; font-size:12px !important;">HAPUS</a>
                                    </td>

                                    @{
                                        totalButir = totalButir + record.TotalButir;
                                        totalKG = totalKG + record.TotalNettKG;
                                    }
                                </tr>
                            }
                            <tr>
                                <td style="font-weight:bold;font-size:16px;" colspan="5">
                                    <b>TOTAL</b>
                                </td>                                
                                <td style="font-weight:bold;font-size:16px;">@totalButir</td>
                                <td style="font-weight:bold;font-size:16px;">@totalKG</td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p>No data available.</p>
            }
        </div>
    </div>
</div>
@if (DeleteDialogOpen)
{
    <ModalDialog Title="Hapus Recording"
    Text="Apakah anda yakin anda ingin menghapus recording ini?"
    OnClose="@OnDeleteDialogClose"
    DialogType="ModalDialog.ModalDialogType.Delete">
    </ModalDialog>
}
@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    string strMenu = "Laporan Recording Kandang";

    string SelectedNoKandang = "";
    DateTime SelectedRecordDate;
    string StrainName = "";
    int SelectedItemId = 0;

    private UserMaster modelUser;
    private Employee modelEmployee;
    string currentUserRole = "User";
    private List<Kandang> CageList = new List<Kandang>();
    private List<DailyRecording> DailyRecordings = new List<DailyRecording>();
    private List<DailyEggPickup> DailyEggPickups = new List<DailyEggPickup>();

    private int CurrentPage = 1;
    private int PageSize = 10;
    private int TotalItems => DailyRecordings.Count;
    DateTime dtFromDate;
    DateTime dtToDate;
    private string[] XAxisLabels; // Stores RecordDate as strings for X-axis labels
    private List<decimal> yAxisValues = new(); // Stores ActualHenDay values for Y-axis data
    public ChartOptions Options = new ChartOptions();
    public List<ChartSeries> Series = new List<ChartSeries>();
    private int SeriesIndex = -1;
    bool ChartDataLoaded = false;
    public bool DeleteDialogOpen { get; set; }

    bool isProcessing;

    private async Task LoadRecording()
    {
        DailyEggPickups = await _db.DailyEggPickup.Where(x => 
                                                    x.CageNumber == SelectedNoKandang && x.RecordDate >= dtFromDate && x.RecordDate < dtToDate).ToListAsync();
        StateHasChanged();
    }

    private void OpenDeleteDialog(int id)
    {
        SelectedItemId = id;

        DeleteDialogOpen = true;
        StateHasChanged();
    }

    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            DeleteRecording();
        }

        DeleteDialogOpen = false;
        StateHasChanged();

        navigation.NavigateTo("/app/recordingreportscage", true);
    }

    private async Task DeleteRecording()
    {        
        try
        {            
            var eggPickup = await _db.DailyEggPickup.FirstOrDefaultAsync(x => x.ID == SelectedItemId);
            if (eggPickup != null)
            {
                SelectedNoKandang = eggPickup.CageNumber;
                SelectedRecordDate = eggPickup.RecordDate;

                var recording = await _db.DailyRecording
                                            .FirstOrDefaultAsync(r => r.CageNumber == int.Parse(SelectedNoKandang).ToString() && r.RecordDate.Date == SelectedRecordDate.Date);
                if (recording != null)
                {
                    recording.PerfectEggCount = recording.PerfectEggCount - eggPickup.TelurUtuhButir;
                    recording.PerfectEggKg = recording.PerfectEggKg - eggPickup.TelurUtuhNettKG;
                    recording.BrokenEggCount = recording.BrokenEggCount - eggPickup.TelurBentesButir;
                    recording.BrokenEggKg = recording.BrokenEggKg - eggPickup.TelurBentesKG;
                    recording.TotalEggCount = recording.TotalEggCount - eggPickup.TotalButir;
                    recording.TotalEggKg = recording.TotalEggKg - eggPickup.TotalNettKG;
                    _db.DailyRecording.Update(recording);
                    _db.DailyEggPickup.Remove(eggPickup);
                    await _db.SaveChangesAsync();

                    Snackbar.Add("Berhasil menghapus recording", Severity.Success);
                }                
            }
        }
        catch (DbUpdateException ex)
        {
            Console.WriteLine($"Database Update Exception: {ex.InnerException?.Message}");
        }
        catch (Exception ex)
        {
            Snackbar.Add("Terjadi kesalahan pada system. Tolong di screenshot: " + ex.Message + Environment.NewLine + ex.StackTrace, Severity.Error);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authstate = await authStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;
        var userName = user.Identity.Name;
        currentUserRole = await _user.GetUserRole(userName);
        modelUser = await _user.UserProfile(userName);
        modelEmployee = await _employee.GetbyUserId(modelUser.UserId);

        var now = DateTime.Now;
        dtFromDate = new DateTime(now.Year, now.Month, 1);
        int lastDay = DateTime.DaysInMonth(now.Year, now.Month);
        dtToDate = new DateTime(now.Year, now.Month, lastDay);

        // Simulate fetching data from a service
        CageList = await _kandang.GetAll();

    }

    private async Task OnCageChanged(ChangeEventArgs e)
    {
        if (e.Value.ToString() != "TIDAK")
        {
            SelectedNoKandang = Helpers.Helper.ConvertCageNumber(e.Value.ToString());
            StateHasChanged();
        }
    }
}    