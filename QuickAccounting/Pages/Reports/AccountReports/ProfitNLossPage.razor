@page "/app/profitnloss"
@inject IAccountReport report
@inject ICompany _company;
@using System.Data;
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@using System.Security.Claims
@inject IPrivilege _privilege
@inject IPrintingService PrintingService
@inject NavigationManager navigation
@attribute [Authorize]
<PageTitle>Laba / Rugi</PageTitle>
<div class="content">
						<div class="page-header">
							<div class="page-title">
								<h4>Laba / Rugi</h4>
							</div>
						</div>

						<!-- /product list -->
						<div class="card">
							<div class="card-body">
			<!-- /Filter -->
				<div class="">
					<div class="card-body pb-0">
					<div class="row">
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group">
								Dari Tanggal
								<RadzenDatePicker @bind-Value=@dtFromDate DateFormat="d" Class="w-100" />
							</div>
						</div>
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group">
								Ke Tanggal
								<RadzenDatePicker @bind-Value=@dtToDate DateFormat="d" Class="w-100" />
							</div>
						</div>
                        <div class="col-lg-3 col-sm-6 col-12">
                            <div class="form-group">
                              <span style="margin-left:-58px;">Detail</span>
                                <RadzenSwitch Style="margin-top:24px; float:left;" @bind-Value=@value Change=@(args => OnChange(args, "Switch")) />
                            </div>
                        </div>
						<div class="col-lg-3 col-sm-6 col-12">
							<div class="form-group" style="margin-top:20px;">
                                <a style="float:left; margin-right:4px;" class="btn btn-filters ms-auto" @onclick="()=>LoadData()"><img src="assets/img/icons/search-whites.svg" alt="img"></a>
                                <a style="float:left;" class="btn btn-filters ms-auto" @onclick="@(_ => PrintingService.Print("printable-form", PrintType.Html))"><img src="assets/img/icons/printer.svg" alt="img"></a>
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- /Filter -->
			
            <form id="printable-form">
								<div class="table-responsive table-scrollable">
									<br/>
									<hr/>
				<table style="width: 100%;line-height: inherit;text-align: left;">
					<tbody>
						<tr>
							<td style="padding:5px;vertical-align:top;text-align:center;padding-bottom:20px">
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 22px;color:#000;font-weight: 600;"> @company.CompanyName </font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 17px;color:#000;font-weight: 600;">@company.Address</font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 15px;color:#000;font-weight: 600;">@company.PhoneNo</font></font><br>
								<font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 16px;color:#000;font-weight: 600;">Laba / Rugi</font></font><br>
							</td>
						</tr>
					</tbody>
				</table>
<br/>
				@((MarkupString)myMarkup)
								</div>
                                </form>
							</div>
						</div>
						<!-- /product list -->
					</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    DateTime dtFromDate = DateTime.UtcNow.AddDays(-1);
    DateTime dtToDate = DateTime.UtcNow;
    Company company = new Company();
    string myMarkup;
    bool value;
    int inCurrenRowIndex = 0;
    int inCurentcolIndex = 0;
    decimal decPrintOrNot = 0;
    decimal decPrintOrNot1 = 0;
    string calculationMethod = string.Empty;
    string strMenu = "Reports";
    protected override async Task OnInitializedAsync()
    {
        //CheckPriviliagee
        var authState = await authenticationState;
        var strRole = authState.User;
        string strName = strRole.FindFirst(ClaimTypes.Role).Value;
        var strShow = await _privilege.PriviliageCheck(strMenu, strName);
        if (strShow.ShowAction == true)
        {
            company = await _company.GetbyId(1);
            await LoadData();
        }
        else
        {
            navigation.NavigateTo("/app/dashboard");
            Snackbar.Add("You dont have to privilege..", Severity.Error);
        }
        
        StateHasChanged();
    }
    private async Task LoadData()
    {

        decimal decgranExTotal = 0;
        decimal decgranIncTotal = 0;
        string calculationMethod = "FIFO";
        DataTable dtblFinancial = new DataTable();
        DataSet DsetProfitAndLoss = new DataSet();

        //LedgerProfitLoss
        DataTable dtblFinancial1 = new DataTable();
        DataSet DsetProfitAndLoss1 = new DataSet();
        DsetProfitAndLoss = report.ProfitAndLossAnalysis(dtFromDate, dtToDate, 1);
        //Ledger
        DsetProfitAndLoss1 = report.ProfitAndLossAnalysisDetailed(dtFromDate, dtToDate, 1);
        //-------------------  -------------------------------//
        decimal dcOpeningStock = 0;
        dcOpeningStock = report.StockValueGetOnDate(dtFromDate, dtToDate, calculationMethod, true, false);

        string values = @"<table class='table' id='tbldemo'>
                          <tr style='background: #F3F2F7;'>
                           <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            </tr>";
        values += @"<tr style='background: #F3F2F7;'>
<th>" + "Expense" + @"</th>
<th>" + "Jumlah" + @"</th>
<th>" + "Income" + @"</th>
<th>" + "Jumlah" + @"</th>
            </tr>";
        if (dcOpeningStock > 0)
        {
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Opening Stock / Saldo Awal" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcOpeningStock, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        }
        else
        {
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Opening Stock / Saldo Awal" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcOpeningStock, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        }
        //Closing Stock
        decimal dcClosingStock = 0;
        dcClosingStock = report.StockValueGetOnDate(dtToDate, calculationMethod, false, false);
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Closing Stock / Saldo Akhir" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcClosingStock, 2)) + @"</td>
                    </tr>";
        /// ---Purchase Account  - Debit
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[0];
        //PurchaseLedger
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[0];
        decimal dcPurchaseAccount = 0m;
        decimal dcPurchaseAccount1 = 0m;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = decimal.Parse(rw["Debit"].ToString().ToString());
                dcPurchaseAccount += dcBalance;



            }

        }

        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Akun Pembelian" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcPurchaseAccount, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
                }
            }
        }

        //---Sales Account  -Credit
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[1];
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[1];
        decimal dcSalesAccount = 0m;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = decimal.Parse(rw["Credit"].ToString().ToString());
                dcSalesAccount += dcBalance;
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Akun Penjualan" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcSalesAccount, 2)) + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='style='font-size:10px;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
                    </tr>";
                }
            }
        }
        //---Direct Expense
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[2];
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[2];
        decimal dcDirectExpense = 0m;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = Convert.ToDecimal(rw["Debit"].ToString());
                dcDirectExpense += dcBalance;
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Pengeluaran Usaha" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(Math.Round(dcDirectExpense, 2))) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
                }
            }
        }
        //----Direct Income
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[3];
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[3];
        decimal dcDirectIncoome = 0m;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = Convert.ToDecimal(rw["Credit"].ToString());
                dcDirectIncoome += dcBalance;
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Direct Incomes" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcDirectIncoome, 2)) + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='style='font-size:10px;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
                    </tr>";
                }
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "_______________________" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "_______________________" + @"</td>
                    </tr>";
        decimal dcTotalExpense = 0;
        decimal dcTotalIncome = 0;
        dcTotalExpense = dcOpeningStock + dcPurchaseAccount + dcDirectExpense;
        dcTotalIncome = dcClosingStock + dcSalesAccount + dcDirectIncoome;
        dcTotalExpense = Math.Round(dcTotalExpense, 2);
        dcTotalIncome = Math.Round(dcTotalIncome, 2);
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Total" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Total" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        decimal dcGrossProfit = 0;
        decimal dcGrossLoss = 0;
        if (dcTotalExpense > dcTotalIncome)
        {
            dcGrossLoss = dcTotalExpense - dcTotalIncome;
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalExpense, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalExpense, 2)) + @"</td>
                    </tr>";
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Gross Loss b/d" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalExpense - dcTotalIncome, 2)) + @"</td>
                    </tr>";
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Gross Loss b/d" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalExpense - dcTotalIncome, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        }
        else
        {
            dcGrossProfit = dcTotalIncome - dcTotalExpense;
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalIncome, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalIncome, 2)) + @"</td>
                    </tr>";
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Laba Kotor c/d" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalIncome - dcTotalExpense, 2)) + @"</td>
                    </tr>";

            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Laba Kotor c/d" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcTotalIncome - dcTotalExpense, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        }
        ///------Indirect Expense
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[4];
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[4];
        decimal dcIndirectExpense = 0;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = Convert.ToDecimal(rw["Debit"].ToString());
                dcIndirectExpense += dcBalance;
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Pengeluaran Lain" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcIndirectExpense, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
                }
            }
        }
        ///---Indirect Income
        dtblFinancial = new DataTable();
        dtblFinancial = DsetProfitAndLoss.Tables[5];
        dtblFinancial1 = new DataTable();
        dtblFinancial1 = DsetProfitAndLoss1.Tables[5];
        decimal dcIndirectIncome = 0m;
        if (dtblFinancial.Rows.Count > 0)
        {
            foreach (DataRow rw in dtblFinancial.Rows)
            {
                decimal dcBalance = Convert.ToDecimal(rw["Credit"].ToString());
                dcIndirectIncome += dcBalance;
            }
        }
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Pemasukan Lain" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcIndirectIncome, 2)) + @"</td>
                    </tr>";
        if (value == true)
        {
            if (dtblFinancial1.Rows.Count > 0)
            {
                foreach (DataRow rw1 in dtblFinancial1.Rows)
                {
                    values += @"<tr>
<td style='style='font-size:10px;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='style='font-size:10px;'>" + rw1["Name"].ToString() + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Convert.ToDecimal(rw1["Balance"].ToString())) + @"</td>
                    </tr>";
                }
            }
        }


        //---- Calculating Grand total
        decimal dcGrandTotalExpense = dcGrossLoss + dcIndirectExpense;
        decimal dcGrandTotalIncome = dcGrossProfit + dcIndirectIncome;
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "_______________________" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "_______________________" + @"</td>
                    </tr>";
        values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Grand Total" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", dcGrandTotalExpense) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Grand Total" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", dcGrandTotalExpense) + @"</td>
                    </tr>";

        if (dcGrandTotalExpense > dcGrandTotalIncome)
        {
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "Rugi Bersih" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcGrandTotalExpense - dcGrandTotalIncome, 2)) + @"</td>
                    </tr>";
            decgranExTotal = dcGrandTotalExpense;
        }
        else
        {
            values += @"<tr>
<td style='width: 260px;font-style:bold; color:black;text-align: left;'>" + "Laba Bersih" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + PublicVariables._Symbol + string.Format("{0:n0}", Math.Round(dcGrandTotalIncome - dcGrandTotalExpense, 2)) + @"</td>
<td style='width: 260px;font-style:bold; color:black;'>" + "" + @"</td>
<td style='width: 140px;font-style:bold; color:black;'>" + "" + @"</td>
                    </tr>";
            decgranIncTotal = dcGrandTotalIncome;
        }

        values += " </table>";
        myMarkup = values;
    }
    void OnChange(bool? value, string name)
    {
        //value = true;
    }
}
