@page "/app/currentprices"
@inject IPricingService _pricing
@inject IProduct _product
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@using System.Security.Claims
@inject IPrivilege _privilege
@attribute [Authorize]

@using QuickAccounting.Components
<Loader IsLoading="isLoading"></Loader>
<PageTitle>Harga Telur Saat Ini</PageTitle>
<div class="content">

	@if (_render)
	{
		<div class="row">
			<div class="col-lg-12 col-sm-12 col-12">
				<div class="dash-widget" style="padding: 0px 20px 0px 20px !important;">
					<div class="dash-widgetcontent">						
						<h5 id="h5Tanggal" style="font-size: 36px;padding: 0px 0px;margin: 0px 0px;"></h5>
					</div>
				</div>
			</div>			
		</div>
		var productGroup = products.GroupBy(x => x.GroupName).ToList();
		<div class="row">
		@for(int q = 0; q < productGroup.Count; q++)
		{			
			for (int i = 0; i < productGroup[q].Count(); i += 2)
			{				
					var items = productGroup[q].Skip(i).Take(2).ToList();
					

					@for (int z = 0; z < items.Count; z++)
					{
						//if (i == 2 && z == 1) continue;
						//if (i == 4 && z == 0) continue;
						if (items[z].ProductId != 2 && items[z].ProductId != 6)
						{
							<div class="col-lg-6 col-sm-6 col-12">
								<div class="dash-widget" style="padding: 15px 15px 0px 15px !important;">
									<div class="dash-widgetcontent">
										<h6 style="font-size: 24px;line-height: 2px;padding-top: 20px;">@items[z].Narration</h6>
										<h5 style="font-size: 58px;line-height: 90px;padding: 0px 0px;margin: 0px 0px;height: fit-content;"><span class="counters">@string.Format("{0:n0}", items[z].SalesRate)</span></h5>
									</div>
								</div>
							</div>
						}
					}

				
			}
			
		}
		</div>
	}
</div>
<script type="text/javascript">
	$(document).ready(function () {
		document.getElementById('toggle_btn').click();

		window.setTimeout(function () {
			console.log("reload");
			window.location.reload();
		}, 60000);

		setInterval(time, 1000);
	});

	function time() {
		var d = new Date();
		var day = d.getDate();
		var month = d.toLocaleString('id-ID', { month: 'long' });;
		var year = d.getFullYear();
		var s = d.getSeconds();
		var m = d.getMinutes();
		var h = d.getHours();
		var span = document.getElementById('h5Tanggal');
		span.textContent = day + " " + month + " " + year + " " +
			("0" + h).substr(-2) + ":" + ("0" + m).substr(-2) + ":" + ("0" + s).substr(-2);
	}
</script>
@code {
	public List<ProductView> products;

	private bool isLoading = true;
	private bool _render;

	protected override async Task OnInitializedAsync()
	{						
		await LoadData();
		StateHasChanged();
		_render = true;
	}

	private async Task LoadData()
	{
		products = await _product.GetAll();
		products = products.OrderBy(z => z.QueueNumber).Take(10).ToList();		
		isLoading = false;
		StateHasChanged();
	}
}
