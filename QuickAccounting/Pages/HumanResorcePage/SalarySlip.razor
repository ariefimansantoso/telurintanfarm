@page "/app/salaryslip"
@inject IAttendance _attendance
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@using System.Security.Claims
@inject IPrivilege _privilege
@inject NavigationManager navigation
@inject IUser _user
@inject IEmployee _employee
@inject IHRServices _hr;
@inject IExcelService _excelService;
@inject PdfService pdfService;

@attribute [Authorize]

<PageTitle>Slip Gaji</PageTitle>
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Slip Gaji</h4>
        </div>
    </div>

    <div class="card">
        <div class="card-body">                             
                    <div class="row">
                        <div class="col-lg-4 col-sm-6 col-12">
                            <div class="form-group" style="text-align: center !important;">
                                <label>Periode Gaji</label>
                                <div class="row">
                                    <div class="col-lg-12 col-sm-12 col-12">
                                        <select class="form-control" @onchange="SelectedCutoff">
                                            @foreach (var cutoff in PayrollCutoffs)
                                            {
                                                <option value="@cutoff.ID">@cutoff.PayrollPeriode</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <br /> <br />
                    <div class="row">
                        <div class="col-lg-12" style="text-align: center !important;">
                            <input type="button" @onclick="@(e => Save())" class="btn btn-submit me-2" value="Unduh" />
                        </div>
                    </div>               
            
        </div>
    </div>    
    <!-- /product list -->
</div>

<script>
    function downloadPdf(base64String, fileName) {
        const link = document.createElement('a');
        link.href = base64String;
        link.download = fileName;
        link.click();
    }
</script>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    DailyAttendanceMaster master = new DailyAttendanceMaster();
    IList<DailyAttendanceView> listModel;
    DailyAttendanceDetails details = new DailyAttendanceDetails();
    List<StatusInfo> listStatus = new List<StatusInfo>();
    DateTime SelectedCutoffFrom;
    DateTime SelectedCutoffTo;
    decimal gajiKaryawanTotal = 0;
    PayrollCutoff Cutoff;
    string UserRoleName;
    UserMaster modelUser = new UserMaster();
    Employee modelEmployee = new Employee();
    DateTime LastPayrollCutoff;
    List<DateTime> PeriodeDates = new List<DateTime>();
    List<PayrollCutoff> PayrollCutoffs = new List<PayrollCutoff>();
    List<Employee> activeEmployees = new List<Employee>();
    List<DailyAttendanceMaster> absensiEmployeePerPeriode = new List<DailyAttendanceMaster>();
    List<IGrouping<int, DailyAttendanceMaster>> detailAttendances = new List<IGrouping<int, DailyAttendanceMaster>>();
    int PeriodDaysCount = 0;

    string strMenu = "Slip Gaji";
    string HtmlContentPdf = "";

    protected override async Task OnInitializedAsync()
    {
        //CheckPriviliagee
        var authState = await authenticationState;
        var strRole = authState.User;
        string strName = strRole.FindFirst(ClaimTypes.Role).Value;
        var strShow = await _privilege.PriviliageCheck(strMenu, strName);
        UserRoleName = strName;

        string userName = strRole.FindFirst(ClaimTypes.Name).Value;
        modelUser = await _user.UserProfile(userName);
        modelEmployee = await _employee.GetbyUserId(modelUser.UserId);

        await LoadData();

        // if (strShow.ShowAction == true)
        // {
        //     await LoadData();
        // }
        // else
        // {
        //     navigation.NavigateTo("/app/dashboard");
        //     Snackbar.Add("You dont have to privilege..", Severity.Error);
        // }
    }

    private async Task LoadData()
    {        
        PayrollCutoffs = await _attendance.GetPayrollCutoffs();
        var lastPayroll = await _attendance.GetLastPayrollCutoff();
        Cutoff = lastPayroll;

        SelectedCutoffFrom = lastPayroll.PayrollDateStart;
        SelectedCutoffTo = lastPayroll.PayrollDate;
        LastPayrollCutoff = SelectedCutoffFrom;

        absensiEmployeePerPeriode = await _attendance.GetAttendanceCurrentPeriodeByEmployeeId(modelEmployee.EmployeeId, SelectedCutoffFrom.Date, SelectedCutoffTo.Date);
        //detailAttendances = absensiEmployeePerPeriode.GroupBy(x => x.EmployeeID).OrderBy(x => x.Key).ToList();

        DateTime endDate = SelectedCutoffTo.Date; // Today's date
                                                  // Iterate from the start date to the end date
        DateTime currentDate = SelectedCutoffFrom.Date;
        while (currentDate <= endDate)
        {
            PeriodDaysCount++;
            PeriodeDates.Add(currentDate);
            currentDate = currentDate.AddDays(1); // Move to the next day
        }

        StateHasChanged();
    }

    private async Task ChangeDate()
    {        
        StateHasChanged();
    }

    private async Task SelectedCutoff(ChangeEventArgs e)
    {
        int cutoffId = Convert.ToInt32(e.Value.ToString());
        Cutoff = PayrollCutoffs.FirstOrDefault(x => x.ID == cutoffId);
    }

    private async Task Save()
    {
        var countMasuk = 0;        
        var alpha = 0;

        var groupByDate = absensiEmployeePerPeriode.GroupBy(x => x.Date.Date).ToList();
        foreach (var gbd in groupByDate)
        {
            if (gbd.Count() >= 2)
            {
                countMasuk++;
            }

            var masukPerHari = _attendance.GetAttendanceListByDateAndEmployeeId(modelEmployee.EmployeeId, gbd.Key).Count;
            if (masukPerHari < 2)
            {
                //check table libur
                var adaIjin = _hr.GetPerijinanByEmployeeIDAndDate(modelEmployee.EmployeeId, gbd.Key);
                if (adaIjin.Count == 0)
                {
                    alpha++;
                }
            }
        }

        decimal gajiDasar = modelEmployee.DailyWage * (decimal)countMasuk;
        decimal totalGaji = gajiDasar;
        decimal cicilan = 0;
        decimal potonganNonCicilan = 0;
        decimal tunjangan = modelEmployee.Tunjangan;

        var perijinanKaryawan = _hr.GetPerijinanByEmployeeIDInPeriodePayroll(modelEmployee.EmployeeId, SelectedCutoffFrom.Date, SelectedCutoffTo.Date);
        var libur = perijinanKaryawan.Where(x => x.SubmittedFor.Equals("LIBUR")).Count();
        var ijin = perijinanKaryawan.Where(x => x.SubmittedFor.Equals("IJIN")).Count();
        var sakit = perijinanKaryawan.Where(x => x.SubmittedFor.Equals("SAKIT")).Count();
        var ijinLembur = perijinanKaryawan.Where(x => x.SubmittedFor.Equals("LEMBUR")).Count();
        var setengahHari = perijinanKaryawan.Where(x => x.SubmittedFor.Equals("SETENGAH HARI")).Count();

        decimal premi = 0;
        decimal gajiBersih = 0;
        var listPotongan = _hr.GetByCurrentMonthYearAndEmployeeId(modelEmployee.EmployeeId, Cutoff.PayrollDateStart.Month, 2024);
        var listPenalty = _hr.GetPenaltyByCurrentMonthYearAndEmployeeId(modelEmployee.EmployeeId, SelectedCutoffFrom.Date, SelectedCutoffTo.Date);
        decimal lembur = modelEmployee.Lembur;

        if (PeriodDaysCount > (countMasuk + alpha + libur + ijin + sakit))
        {
            alpha = PeriodDaysCount - (countMasuk + alpha + libur + ijin + sakit);
        }

        if (listPotongan.Count > 0)
        {
            foreach (var pt in listPotongan)
            {
                cicilan = cicilan + pt.RP_POTONGAN;
            }
        }

        if (listPenalty.Count > 0)
        {
            foreach (var penalty in listPenalty)
            {
                potonganNonCicilan = potonganNonCicilan + penalty.PenaltyAmount;
            }
        }

        if (libur <= 3 && ijin == 0 && alpha == 0)
        {
            premi = totalGaji * (decimal)0.15;
            totalGaji = totalGaji + premi;            
        }

        totalGaji = totalGaji + lembur + tunjangan;
        var totalPotongan = cicilan + potonganNonCicilan + modelEmployee.BPJS_KES + modelEmployee.BPJS_TK;

        gajiBersih = totalGaji - totalPotongan;        

        var namaKaryawan = modelEmployee.EmployeeName;
        var idKaryawan = modelEmployee.EmployeeId;
        var periode = Cutoff.PayrollPeriode;
        var tanggalJoin = modelEmployee.JoiningDate.ToString("dd MMMM yyyy");
        

        object[] paramData = new object[]
        {
            periode, namaKaryawan, idKaryawan, UserRoleName, "none", tanggalJoin, modelEmployee.BankAccount, 
            string.Format("{0:n0}", gajiDasar), string.Format("{0:n0}", premi), string.Format("{0:n0}", modelEmployee.BPJS_KES), string.Format("{0:n0}", modelEmployee.BPJS_TK),
            string.Format("{0:n0}", modelEmployee.Lembur), string.Format("{0:n0}", modelEmployee.Tunjangan), string.Format("{0:n0}", totalGaji),

            "Jenis Potongan", string.Format("{0:n0}", cicilan), string.Format("{0:n0}", potonganNonCicilan), string.Format("{0:n0}", totalPotongan),
            string.Format("{0:n0}", gajiBersih), "none",
            countMasuk, libur, ijin, sakit, alpha, string.Format("{0:n0}", modelEmployee.DailyWage)
        };

        HtmlContentPdf = string.Format(@"<!DOCTYPE html>
                        <html lang='en'>
                        <head>
                            <meta charset='UTF-8'>
                            <meta name='viewport' content='width=device-width, initial-scale=1.0'>
                            <title>Slip Gaji</title>
                            <link rel='stylesheet' href='https://telurintanfarm.com/css/slipgaji.css' />
                        </head>
                        <body>
                            <div class='payslip-container'>
                                <!-- Payslip Header -->
                                <div class='header'>                                    
                                    <h1>Slip Gaji</h1>
                                    <p><strong>Nama Perusahaan:</strong> PT Telur Intan Farm</p>
                                    <p><strong>Bulan:</strong> {0}</p>
                                </div>

                                <!-- Employee Details -->
                                <div class='details'>
                                    <table>
                                        <tr>
                                            <th>Nama Karyawan:</th>
                                            <td>{1}</td>
                                            <th>ID:</th>
                                            <td>{2}</td>
                                        </tr>
                                        <tr>
                                            <th>Jabatan:</th>
                                            <td colspan='3'>{3}</td>
                                            <!--<th>Department:</th>
                                            <td>{4}</td>-->
                                        </tr>
                                        <tr>
                                            <th>Tanggal Mulai:</th>
                                            <td>{5}</td>
                                            <th>Nomor Rekening:</th>
                                            <td>{6}</td>
                                        </tr>
                                        <tr>
                                            <th>Masuk:</th>
                                            <td>{20}</td>
                                            <th>Libur:</th>
                                            <td>{21}</td>
                                        </tr>
                                        <tr>
                                            <th>Ijin:</th>
                                            <td>{22}</td>
                                            <th>Sakit:</th>
                                            <td>{23}</td>
                                        </tr>
                                        <tr>
                                            <th>Setengah Hari:</th>
                                            <td>{26}</td>
                                            <th>Lembur:</th>
                                            <td>{27}</td>
                                        </tr>
                                        <tr>
                                            <th>Alpha:</th>
                                            <td>{24}</td>
                                            <th>Gaji Harian:</th>
                                            <td>{25}</td>
                                        </tr>
                                    </table>
                                </div>

                                <!-- Earnings Section -->
                                <div class='earnings'>
                                    <h3>Pendapatan</h3>
                                    <table>
                                        <tr>
                                            <th>Jenis</th>
                                            <th>Jumlah (Rp)</th>
                                        </tr>
                                        <tr>
                                            <td>Gaji Pokok (Gaji Harian x Hari Masuk)</td>
                                            <td>{7}</td>
                                        </tr>
                                        <tr>
                                            <td>Premi</td>
                                            <td>{8}</td>
                                        </tr>                                        
                                        <tr>
                                            <td>Lembur</td>
                                            <td>{11}</td>
                                        </tr>
                                        <tr>
                                            <td>Tunjangan</td>
                                            <td>{12}</td>
                                        </tr>
                                        <tr class='total'>
                                            <td>Total Pendapatan</td>
                                            <td>{13}</td>
                                        </tr>
                                    </table>
                                </div>

                                <!-- Deductions Section -->
                                <div class='deductions'>
                                    <h3>Potongan</h3>
                                    <table>
                                        <tr>
                                            <th>{14}</th>
                                            <th>Jumlah (Rp)</th>
                                        </tr>
                                        <tr>
                                            <td>BPJS Kesehatan</td>
                                            <td>{9}</td>
                                        </tr>
                                        <tr>
                                            <td>BPJS Ketenagakerjaan</td>
                                            <td>{10}</td>
                                        </tr>
                                        <tr>
                                            <td>Cicilan</td>
                                            <td>{15}</td>
                                        </tr>
                                        <tr>
                                            <td>Potongan</td>
                                            <td>{16}</td>
                                        </tr>
                                        
                                        <tr class='total'>
                                            <td>Total Potongan</td>
                                            <td>{17}</td>
                                        </tr>
                                    </table>
                                </div>

                                <!-- Net Pay -->
                                <div class='net-pay'>
                                    <h3>Gaji Bersih Rp. {18}</h3>                                    
                                </div>

                                <!-- Payslip Footer -->
                                <div class='footer'>
                                    <!--<p><strong>Tanggal Pembayaran:</strong> {19}</p> -->
                                    <img src='https://telurintanfarm.com/img/ttd.png' style='width: 200px' />
                                </div>
                            </div>
                        </body>
                        </html>", periode, namaKaryawan, idKaryawan, UserRoleName, "none", tanggalJoin, modelEmployee.BankAccount,
                                string.Format("{0:n0}", gajiDasar), string.Format("{0:n0}", premi), string.Format("{0:n0}", modelEmployee.BPJS_KES), string.Format("{0:n0}", modelEmployee.BPJS_TK),
                                string.Format("{0:n0}", modelEmployee.Lembur), string.Format("{0:n0}", modelEmployee.Tunjangan), string.Format("{0:n0}", totalGaji),

                                "Jenis Potongan", string.Format("{0:n0}", cicilan), string.Format("{0:n0}", potonganNonCicilan), string.Format("{0:n0}", totalPotongan),
                                string.Format("{0:n0}", gajiBersih), "none",
                                countMasuk, libur, ijin, sakit, alpha, string.Format("{0:n0}", modelEmployee.DailyWage), ijinLembur, setengahHari);
        
        var fileNamePdf = "slipgaji_" + namaKaryawan.Replace(" ", "_") + "_" + periode.Replace(" ", "_") + "_.pdf";
        
        var pdfResult = await pdfService.GeneratePdf(HtmlContentPdf);

        // Initiate the download
        // Using Javascript to download PDF
        // var fileName = "slipgaji_" + namaKaryawan.Replace(" ", "_") + "_" + periode.Replace(" ", "_") + "_.pdf";
        var base64 = Convert.ToBase64String(pdfResult);
        var url = $"data:application/pdf;base64,{base64}";

        await JSRuntime.InvokeVoidAsync("downloadPdf", url, fileNamePdf);
    }
}
