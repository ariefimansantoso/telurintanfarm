@page "/app/employeeedit/{id}"
@inject IEmployee _employee
@inject IDesignation _designation
@inject ISalaryPackage _salaryPackage
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@using System.Security.Claims
@inject IPrivilege _privilege
@inject NavigationManager navigation
@attribute [Authorize]
<PageTitle>Edit Data Karyawan</PageTitle>
<div class="content">
					<div class="page-header">
						<div class="page-title">
							<h4>Edit Data Karyawan</h4>
							<h6>Employee</h6>
						</div>
					</div>
					<!-- /add -->
					<div class="card">
						<div class="card-body">
							<EditForm Model="model" OnValidSubmit="Save">
            <DataAnnotationsValidator />
							<div class="row">
								<div class="col-lg-8 col-sm-6 col-12">
									<div class="form-group">
										<label>Nama Karyawan</label>
										<input type="text" @bind="model.EmployeeName" >
							<ValidationMessage For="@(() => model.EmployeeName)" />
									</div>
								</div>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
										<label>Kode Karyawan</label>
										<input type="text" @bind="model.EmployeeCode" >
							<ValidationMessage For="@(() => model.EmployeeCode)" />
									</div>
								</div>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
							<label>Designation</label>
										<select class="form-control" @bind="model.DesignationId">
											<option value="0">Choose</option>
											@if(listDesignation !=null)
											{
											@foreach(var item in listDesignation)
								{
									<option value="@item.DesignationId">@item.DesignationName</option>
								}
											}
							</select>
							<ValidationMessage For="@(() => model.DesignationId)" />
									</div>
								</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Salary Package (Abaikan)</label>
							<select class="form-control" @bind="model.DefaultPackageId">
								<option value="0">Choose</option>
								@if (listPackage != null)
								{
									@foreach (var item in listPackage)
									{
										<option value="@item.SalaryPackageId">@item.SalaryPackageName</option>
									}
								}
							</select>
							<ValidationMessage For="@(() => model.DefaultPackageId)" />
						</div>
					</div>
					<div class="col-lg-8 col-sm-6 col-12">
						<div class="form-group">
							<label>Tanggal Lahir</label>
							<RadzenDatePicker @bind-Value=@model.Dob DateFormat="d" Class="w-100" />
							<ValidationMessage For="@(() => model.Dob)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
							<label>Status Pernikahan</label>
							<select class="form-control" @bind="model.MaritalStatus">
								<option value="Married">Menikah</option>
								<option value="UnMarried">Belum Menikah</option>
							</select>
									</div>
								</div>
								<hr/>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
							<label>Jenis Kelamin</label>
							<select class="form-control" @bind="model.Gender">
								<option value="Male">Laki-laki</option>
								<option value="Female">Perempuan</option>
							</select>
									</div>
								</div>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
							<label>Kualifikasi/Pendidikan</label>
							<input type="text" @bind="model.Qualification">
							<ValidationMessage For="@(() => model.Qualification)" />
									</div>
								</div>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
							<label>Alamat</label>
							<input type="text" @bind="model.Address">
							<ValidationMessage For="@(() => model.Address)" />
									</div>
								</div>
								<h6>Data Tambahan</h6>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>No Telepon</label>
							<input type="text" @bind="model.PhoneNumber">
							<ValidationMessage For="@(() => model.PhoneNumber)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Nomor HP</label>
							<input type="text" @bind="model.MobileNumber">
							<ValidationMessage For="@(() => model.MobileNumber)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Email</label>
							<input type="text" @bind="model.Email">
							<ValidationMessage For="@(() => model.Email)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>NIK</label>
							<input type="text" @bind="model.NIK">
							<ValidationMessage For="@(() => model.NIK)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>ID BPJS TK</label>
							<input type="text" @bind="model.ID_BPJS_TK">
							<ValidationMessage For="@(() => model.ID_BPJS_TK)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>ID BPJS KES</label>
							<input type="text" @bind="model.ID_BPJS_KES">
							<ValidationMessage For="@(() => model.ID_BPJS_KES)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Rekening</label>
							<input type="text" @bind="model.BankAccount">
							<ValidationMessage For="@(() => model.BankAccount)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>RP BPJS TK</label>
							<input type="text" @bind="model.BPJS_TK">
							<ValidationMessage For="@(() => model.BPJS_TK)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>RP BPJS KES</label>
							<input type="text" @bind="model.BPJS_KES">
							<ValidationMessage For="@(() => model.BPJS_KES)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<div class="form-group">
							<label>Tanggal Mulai Kerja</label>
							<RadzenDatePicker @bind-Value=@model.JoiningDate DateFormat="d" Class="w-100" />
							<ValidationMessage For="@(() => model.JoiningDate)" />
						</div>
					</div>
					<div class="col-lg-4 col-sm-6 col-12">
						<label>Model Gajian</label>
						<select @bind="model.SalaryType" class="form-control">
							<option value="Daily wage">Harian</option>
							<option value="Monthly">Bulanan</option>
						</select>
					</div>
					<div class="col-lg-1 col-sm-6 col-12">
						<label>Gaji Harian</label>
						<input type="text" class="form-control" @bind="model.DailyWage">
					</div>
					<div class="col-lg-1 col-sm-6 col-12">
						<label>Tunjangan</label>
						<input type="text" class="form-control" @bind="model.Tunjangan">
					</div>					
								<div class="col-lg-12">
									<button type="submit" class="btn btn-submit me-2">Submit</button>
									<a href="/app/customer" class="btn btn-cancel">Cancel</a>
								</div>
								
							</div>
							</EditForm>
						</div>
					</div>
					<!-- /add -->

					<div class="card">
						<div class="card-body">
							<div class="row">
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
										<label>Job Desc</label>
										<div id="quill-editor-jobdesc" style="height: 200px;"></div>
										@*<textarea cols="6" style="width:100%;" @bind="model.JobDesc"></textarea>
										<ValidationMessage For="@(() => model.JobDesc)" /> *@
									</div>
								</div>
								<div class="col-lg-4 col-sm-6 col-12">
									<div class="form-group">
										<label>SOP</label>
										<div id="quill-editor-sop" style="height: 200px;"></div>
										@*<textarea cols="6" style="width:100%;" @bind="model.SOP"></textarea>
										<ValidationMessage For="@(() => model.SOP)" /> *@
									</div>
								</div>
							</div>
							
						</div>
					</div>
				</div>
@code {
	[Parameter]
	public string id { get; set; }
	[CascadingParameter]
	public Task<AuthenticationState> authenticationState { get; set; }
	static Employee model = new Employee();
	IList<DesignationView> listDesignation;
	IList<SalaryPackage> listPackage;
	string strMenu = "Human Resources";	
	bool quillRendered = false;

	protected override async Task OnInitializedAsync()
	{
		//CheckPriviliagee
		var authState = await authenticationState;
		var strRole = authState.User;
		string strName = strRole.FindFirst(ClaimTypes.Role).Value;
		var strShow = await _privilege.PriviliageCheck(strMenu, strName);
		if (strShow.ShowAction == true)
		{
			await LoadData();
		}
		else
		{
			navigation.NavigateTo("/app/dashboard");
			Snackbar.Add("You dont have to privilege..", Severity.Error);
		}
	}

	private async Task LoadData()
	{
		model = await _employee.GetbyId(Convert.ToInt32(id));
		listDesignation = await _designation.GetAll();
		listPackage = await _salaryPackage.GetAll();

		await JSRuntime.InvokeVoidAsync("quillInterop.initializeQuill", "quill-editor-jobdesc", model.JobDesc);
		await JSRuntime.InvokeVoidAsync("quillInterop.initializeQuill", "quill-editor-sop", model.SOP);

		StateHasChanged();
	}

	private async Task Save()
	{
		var isCheck = await _employee.CheckNameId(model.EmployeeName);
		if (isCheck == model.EmployeeId || isCheck == 0)
		{
			model.Narration = string.Empty;
			model.isActive = true;

			bool result = await _employee.Update(model);
			if (result == true)
			{
				Snackbar.Add("Updated Successfully.", Severity.Success);
				StateHasChanged();
				navigation.NavigateTo("/app/employee");
			}
			else
			{
				Snackbar.Add("Invalid.", Severity.Error);
				StateHasChanged();
			}
		}
		else
		{
			Snackbar.Add("Employee name already exists.", Severity.Info);
		}
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		
	}

	[JSInvokable]
	public static async Task UpdateQuillContent(string elementId, string content)
	{		
		if (elementId == "quill-editor-jobdesc")
			model.JobDesc = content;

		if (elementId == "quill-editor-sop")
			model.SOP = content;
	}
}
