@page "/app/attendancelist"
@inject IAttendance _advancePayment
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@using System.Security.Claims
@inject IPrivilege _privilege
@inject NavigationManager navigation
@attribute [Authorize]
<PageTitle>Laporan Absensi</PageTitle>
<div class="content">
    <div class="page-header">
        <div class="page-title">
            <h4>Laporan Absensi Karyawan</h4>
        </div>
        <div class="page-btn">
            <a class="btn btn-added" style="float:left;" href="/app/attendance"><img src="assets/img/icons/plus.svg" alt="img" class="me-1">Add New</a>
        </div>
    </div>
    <!-- /product list -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <div class="row">
			        <div class="col-lg col-sm-6 col-12">
				        <div class="form-group">
					        Dari Tanggal
					        <input type="date" @bind="@dtFromDate" class="form-control" />
				        </div>
			        </div>
			        <div class="col-lg col-sm-6 col-12">
				        <div class="form-group">
					        Ke Tanggal
					        <input type="date" @bind="@dtToDate" class="form-control" />
				        </div>
			        </div>				
			        <div class="col-lg-1 col-sm-6 col-12">
				        <div class="form-group" style="margin-top:20px;">
					        <Loading IsLoading="isProcessing">
						        <a class="btn btn-filters ms-auto" @onclick="()=>LoadDataAbsensi()"><img src="assets/img/icons/search-whites.svg" alt="img" /></a>
					        </Loading>
				        </div>
			        </div>
		        </div>
            </div>
        </div>
    </div>
    <!-- /product list -->
</div>




@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    IList<DailyAttendanceView> listModel;
    private bool dense = true;
    private bool hover = true;
    private string searchString1 = "";
    string strMenu = "Absensi Karyawan";
    private bool visible;
    private MudBlazor.DialogOptions dialogOptions = new() { FullWidth = true };
    string ShowDialogue;
    DateTime dtFromDate;
    DateTime dtToDate;
    private bool isProcessing;
    protected override async Task OnInitializedAsync()
    {
        //CheckPriviliagee
        var authState = await authenticationState;
        var strRole = authState.User;
        string strName = strRole.FindFirst(ClaimTypes.Role).Value;
        var strShow = await _privilege.PriviliageCheck(strMenu, strName);
        if (strShow.ShowAction == true)
        {
            await LoadData();
        }
        else
        {
            navigation.NavigateTo("/app/dashboard");
            Snackbar.Add("You dont have to privilege..", Severity.Error);
        }
    }
    private async Task LoadData()
    {
        listModel = await _advancePayment.GetAll();
        StateHasChanged();
    }   

    private async Task LoadDataAbsensi()
    {
        
    }
}
